<!-- BookClasses.razor -->
@page "/book-classes/{username}/{email}"
<div class="row">
    <div class="col-7">
        <h3>Classes Schedules</h3>
    </div>
    <div class="col-5">
        <button class="btn btn-primary float-left m-1" @onclick="BookClasses">Book</button>
    </div>
</div>
<div class="container">
    <div class="row mb-3">
        <div class="col-md-6">
            <div class="row">
                <div class="col-2">
                    <label for="dayOfWeekFilter" style="font-size:16px;" class=" form-label mt-2" >Day:</label>
                </div>
                <div class="col-6">
                    <select class="form-control" id="dayOfWeekFilter" @bind="selectedDayOfWeek">
                        <option value="">All</option>
                        <option value="Monday">Monday</option>
                        <option value="Tuesday">Tuesday</option>
                        <option value="Wednesday">Wednesday</option>
                        <option value="Thursday">Thursday</option>
                        <option value="Friday">Friday</option>
                        <option value="Saturday">Saturday</option>
                        <option value="Sunday">Sunday</option>
                    </select>
                </div>
                <div class="col-4">
                    <button class="btn " style="font-size:16px;background-color:darkgray" @onclick="GetFilteredSchedulesByDay">Filter <i class="fa fa-filter"></i></button>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-2">
                    <label for="dateFilter" style="font-size:16px;" class=" form-label mt-2">Date:</label>
                </div>
                <div class="col-6">
                    <input type="date" class="form-control" id="dateFilter" @bind-value="selectedDate" />
                </div>
                <div class="col-4">
                    <button class="btn" style="font-size:16px;background-color:darkgray" @onclick="GetFilteredSchedulesByDate">Filter <i class="fa fa-filter"></i></button>
                </div>
            </div>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Select</th>
                <th>Day of Week</th>
                <th>Date</th>
                <th>Time</th>
                <th>Course Name</th>
                <th>Teacher</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var schedule in FilteredSchedules)
            {
                <tr>
                    <td>
                        @if (schedule.Selected)
                        {
                            <button class="btn btn-success float-left m-1" @onclick="() => AddToCart(schedule)">Add To Cart<i class="fa fa-plus"></i></button>
                        }
                        else
                        {
                            <button class="btn btn-danger float-left m-1" @onclick="() => RemoveFromCart(schedule)">Remove From Cart<i class="fa fa-close"></i></button>
                        }
                    </td>
                    <td>@schedule.DayOfWeek</td>
                    <td>@schedule.Date</td>
                    <td>@schedule.Time</td>
                    <td>@schedule.CourseName</td>
                    <td>@schedule.Teacher</td>
                </tr>
            }
        </tbody>
    </table>

</div>

@code {
    [Parameter]
    public string username { get; set; }
    [Parameter]
    public string email { get; set; }
    private List<CourseSchedule> AllSchedules { get; set; }
    private List<CourseSchedule> FilteredSchedules { get; set; }
    private List<CourseSchedule> AddToCartSchedules { get; set; }
    [Inject]
    IToastService ToastService { get; set; }
    private string selectedDayOfWeek = DateTime.Now.DayOfWeek.ToString();
    private DateTime selectedDate = DateTime.Now;

    protected override void OnInitialized()
    {
        // Initialize with dummy data
        AllSchedules = new List<CourseSchedule>
        {
            new CourseSchedule { InstanceId = 1, DayOfWeek = "Monday", Date = "12/04/2023", Time = "10:00 AM", CourseName = "Yoga Basics", Teacher = "John Doe" },
            new CourseSchedule { InstanceId = 2, DayOfWeek = "Tuesday", Date = "12/05/2023", Time = "11:00 AM", CourseName = "Power Yoga", Teacher = "Jane Smith" },
            new CourseSchedule { InstanceId = 3, DayOfWeek = "Wednesday", Date = "12/06/2023", Time = "10:30 AM", CourseName = "Hatha Yoga", Teacher = "Bob Johnson" },
            new CourseSchedule { InstanceId = 4, DayOfWeek = "Thursday", Date = "12/07/2023", Time = "09:00 AM", CourseName = "Vinyasa Flow", Teacher = "Alice Williams" },
            new CourseSchedule { InstanceId = 5, DayOfWeek = "Friday", Date = "12/08/2023", Time = "02:00 PM", CourseName = "Restorative Yoga", Teacher = "Charlie Brown" },
            new CourseSchedule { InstanceId = 6, DayOfWeek = "Saturday", Date = "12/09/2023", Time = "01:30 PM", CourseName = "Aerial Yoga", Teacher = "Eva Davis" },
            new CourseSchedule { InstanceId = 7, DayOfWeek = "Sunday", Date = "12/10/2023", Time = "03:00 PM", CourseName = "Meditation", Teacher = "David Miller" },
            new CourseSchedule { InstanceId = 8, DayOfWeek = "Monday", Date = "12/11/2023", Time = "09:30 AM", CourseName = "Yin Yoga", Teacher = "Grace Robinson" },
            new CourseSchedule { InstanceId = 9, DayOfWeek = "Tuesday", Date = "12/12/2023", Time = "12:00 PM", CourseName = "Kundalini Yoga", Teacher = "Frank White" },
            new CourseSchedule { InstanceId = 10, DayOfWeek = "Wednesday", Date = "12/13/2023", Time = "11:30 AM", CourseName = "Gentle Yoga", Teacher = "Sophie Moore" }
         };
        FilteredSchedules = AllSchedules;
    }

    private void GetFilteredSchedulesByDay()
    {
        // Apply filters based on selectedDayOfWeek and selectedDate
        var filteredSchedules = AllSchedules;
        if (!string.IsNullOrEmpty(selectedDayOfWeek) && selectedDayOfWeek == "All")
        {
            filteredSchedules = filteredSchedules.Where(s => s.DayOfWeek == selectedDayOfWeek).ToList();
        }
        FilteredSchedules = filteredSchedules;
    }
    private void GetFilteredSchedulesByDate()
    {
        // Apply filters based on selectedDayOfWeek and selectedDate
        var filteredSchedules = AllSchedules;
        filteredSchedules = filteredSchedules.Where(s => s.Date == selectedDate.ToString("MM/dd/yyyy")).ToList();
        FilteredSchedules = filteredSchedules;
    }

    private void AddToCart(CourseSchedule course)
    {
        var index = FilteredSchedules.FindIndex(x => x.InstanceId == course.InstanceId);
        FilteredSchedules[index].Selected = true;
    }
    private void RemoveFromCart(CourseSchedule course)
    {
        var index = FilteredSchedules.FindIndex(x => x.InstanceId == course.InstanceId);
        FilteredSchedules[index].Selected = false;
    }
    private void BookClasses()
    {
        
    }
    public class CourseSchedule
    {
        public int InstanceId { get; set; }
        public string DayOfWeek { get; set; }
        public string Date { get; set; }
        public string Time { get; set; }
        public string CourseName { get; set; }
        public string Teacher { get; set; }
        public bool Selected { get; set; }
    }
}
